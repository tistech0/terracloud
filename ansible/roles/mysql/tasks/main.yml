---
- name: Verify required variables are defined
  assert:
    that:
      - mysql_user is defined
      - mysql_root_password is defined
      - vault_mysql_root_pass is defined
      - vault_mysql_app_pass is defined
    msg: "Required variables must be defined in inventory or vault"

# Installation et configuration en bloc
- name: MySQL Installation and Initial Setup
  block:
    - name: Install MySQL packages
      apt:
        name: "{{ mysql_packages }}"
        state: present
        update_cache: yes

    - name: Create MySQL configuration file
      template:
        src: mysql.cnf.j2
        dest: /etc/mysql/conf.d/custom.cnf
        owner: root
        group: root
        mode: '0644'
      notify: Restart MySQL

    - name: Ensure MySQL service is started and enabled
      service:
        name: mysql
        state: started
        enabled: yes
    - name: Ensure MySQL log directory exists
      file:
        path: /var/log/mysql
        state: directory
        mode: '0755'
        owner: mysql
        group: mysql
  tags: 
    - mysql_install

# Sécurisation en bloc
- name: MySQL Security Setup
  block:
    - name: Create temporary .my.cnf file
      template:
        src: my.cnf.j2
        dest: "{{ mysql_config_file }}"
        mode: '0600'
      no_log: true
      notify: cleanup mysql config

    - name: Create temporary secure SQL file
      template:
        src: mysql_secure.sql.j2
        dest: /tmp/mysql_secure.sql
        mode: '0600'
      no_log: true

    - name: Apply MySQL secure configuration
      mysql_db:
        state: import
        name: mysql
        target: /tmp/mysql_secure.sql
        login_user: "{{ mysql_root_user }}"
        login_password: "{{ mysql_root_password }}"
      no_log: true

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/mysql_secure.sql
      no_log: true
  rescue:
    - name: Clean up on failure
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ mysql_config_file }}"
        - /tmp/mysql_secure.sql
      ignore_errors: yes
  tags:
    - mysql_secure

# Création des bases et utilisateurs en bloc
- name: MySQL Database and User Setup
  block:
    - name: Create MySQL databases
      mysql_db:
        name: "{{ item.name }}"
        collation: "{{ item.collation | default('utf8mb4_general_ci') }}"
        encoding: "{{ item.encoding | default('utf8mb4') }}"
        state: present
        login_user: "{{ mysql_root_user }}"
        login_password: "{{ mysql_root_password }}"
      loop: "{{ mysql_databases }}"
      no_log: true

    - name: Create MySQL users
      mysql_user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        priv: "{{ item.priv }}"
        host: "{{ item.host | default('localhost') }}"
        state: present
        login_user: "{{ mysql_root_user }}"
        login_password: "{{ mysql_root_password }}"
      loop: "{{ mysql_users }}"
      # no_log: true
  tags:
    - mysql_config

# Firewall en bloc
- name: Firewall Configuration
  block:
    - name: Configure UFW rules
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        from_ip: "{{ item.from_ip | default(omit) }}"
      loop: "{{ mysql_ufw_rules }}"
  tags:
    - mysql_firewall