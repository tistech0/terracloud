---
- name: Install and Configure Grafana
  hosts: db_monitoring_servers
  become: yes
  vars:
    grafana_version: 8.2.2
    prometheus_url: "http://localhost:9090"

  tasks:
    - name: Add Grafana GPG key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
        filename: grafana

    - name: Install Grafana
      apt:
        name: grafana={{ grafana_version }}
        update_cache: yes
        state: present

    - name: Ensure Grafana is started and enabled
      systemd:
        name: grafana-server
        state: started
        enabled: yes

    - name: Wait for Grafana to start
      wait_for:
        port: 3000
        delay: 10
    
    - name: Check Grafana status
      systemd:
        name: grafana-server
        state: started
      register: grafana_status

    - name: Display Grafana status
      debug:
        var: grafana_status

    - name: Check Grafana API
      uri:
        url: "http://localhost:3000/api/health"
        method: GET
      register: grafana_api_check
      ignore_errors: yes

    - name: Display Grafana API check result
      debug:
        var: grafana_api_check

    - name: Check network connectivity to Grafana
      wait_for:
        host: localhost
        port: 3000
        timeout: 5
      register: network_check
      ignore_errors: yes

    - name: Display network check result
      debug:
        var: network_check

    - name: Change admin password (using uri module)
      uri:
        url: "http://localhost:3000/api/admin/users/1/password"
        method: PUT
        user: admin
        password: admin
        force_basic_auth: yes
        body_format: json
        body:
          password: "{{ grafana_admin_password }}"
        status_code: 200
      no_log: true

    - name: Configure Grafana datasource
      community.grafana.grafana_datasource:
        name: "Prometheus"
        grafana_url: "http://localhost:3000"
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin_password }}"
        org_id: 1
        ds_type: "prometheus"
        ds_url: "http://localhost:9090"
        access: "proxy"
        is_default: true

    - name: Import Node Exporter dashboard
      community.grafana.grafana_dashboard:
        grafana_url: "http://localhost:3000"
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin_password }}"
        org_id: 1
        dashboard_id: 1860
        dashboard_revision: 27
        state: present
        
    - name: Check Grafana datasource
      uri:
        url: "http://localhost:3000/api/datasources/proxy/1/api/v1/query?query=up"
        method: GET
        user: admin
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
      register: grafana_datasource_check
      ignore_errors: yes

    - name: Display Grafana datasource check result
      debug:
        var: grafana_datasource_check
    
    - name: Copy dashboard file to remote host
      copy:
        src: "/home/tistech/dev/github/epitech/mirror/terracloud/ansible/templates/graphana/dashboard.json"
        dest: "/tmp/dashboard.json"

    - name: Create Grafana dashboard
      community.grafana.grafana_dashboard:
        grafana_url: "http://localhost:3000"
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin_password }}"
        state: present
        overwrite: yes
        path: "/tmp/dashboard.json"

  handlers:
    - name: Restart Grafana
      systemd:
        name: grafana-server
        state: restarted