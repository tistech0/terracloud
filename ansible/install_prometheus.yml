---
- name: Install and Configure Prometheus
  hosts: back,front,db_monitoring_servers
  become: yes
  vars:
    prometheus_version: 2.30.3
    prometheus_config_path: /etc/prometheus
    prometheus_data_path: /var/lib/prometheus
    node_exporter_version: 1.3.1

  tasks:
    - name: Create Prometheus system group
      group:
        name: prometheus
        system: yes
        state: present

    - name: Create Prometheus system user
      user:
        name: prometheus
        system: yes
        group: prometheus
        create_home: no
        shell: /sbin/nologin

    - name: Create Node Exporter system user
      user:
        name: node_exporter
        system: yes
        create_home: no
        shell: /sbin/nologin

    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - "{{ prometheus_config_path }}"
        - "{{ prometheus_data_path }}"
        - /tmp/prometheus

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "/tmp/prometheus/prometheus-{{ prometheus_version }}.tar.gz"

    - name: Extract Prometheus
      unarchive:
        src: "/tmp/prometheus/prometheus-{{ prometheus_version }}.tar.gz"
        dest: /tmp/prometheus
        remote_src: yes
        creates: "/tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64"

    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: yes
      loop:
        - prometheus
        - promtool

    - name: Copy Prometheus configuration
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: Restart Prometheus

    - name: Setup Prometheus systemd service
      template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: '0644'

    - name: Install Node Exporter
      unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /usr/local/bin
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: /usr/local/bin/node_exporter

    - name: Set Node Exporter binary permissions
      file:
        path: /usr/local/bin/node_exporter
        owner: node_exporter
        group: node_exporter
        mode: '0755'

    - name: Setup Node Exporter systemd service
      template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'

    - name: Start and enable Prometheus and Node Exporter services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
        daemon_reload: yes
      loop:
        - prometheus
        - node_exporter

    - name: Open Prometheus port
      ufw:
        rule: allow
        port: '9090'
        proto: tcp

    - name: Open Node Exporter port
      ufw:
        rule: allow
        port: '9100'
        proto: tcp

    - name: Reload UFW
      ufw:
        state: reloaded
    
    - name: Check Prometheus targets
      uri:
        url: "http://localhost:9090/api/v1/targets"
        method: GET
      register: prometheus_targets
      ignore_errors: yes

    - name: Display Prometheus targets
      debug:
        var: prometheus_targets.json.data.activeTargets

  handlers:
    - name: Restart Prometheus
      systemd:
        name: prometheus
        state: restarted

    - name: Restart Node Exporter
      systemd:
        name: node_exporter
        state: restarted