---
- name: Collecter les faits de tous les hôtes
  hosts: all
  gather_facts: yes

- name: Installer et sécuriser PostgreSQL
  hosts: db_servers
  become: yes
  vars:
    postgresql_version: 12
    postgresql_port: 5432
    backend_ip: "{{ hostvars['ubuntu-vm-nts-0-back']['ansible_host'] }}"
  tasks:
    - name: Vérifier si l'hôte 'back' existe
      fail:
        msg: "L'hôte 'ubuntu-vm-nts-0-back' n'est pas défini dans l'inventaire"
      when: "'ubuntu-vm-nts-0-back' not in groups['back']"

    - name: Ajouter la clé GPG PostgreSQL
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Ajouter le dépôt PostgreSQL
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main
        state: present
        filename: pgdg

    - name: Mettre à jour le cache apt
      apt:
        update_cache: yes

    - name: Installer PostgreSQL
      apt:
        name: 
          - postgresql-{{ postgresql_version }}
          - postgresql-contrib
          - libpq-dev
        state: present

    - name: S'assurer que le service PostgreSQL est démarré
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Configurer PostgreSQL pour utiliser SSL
      lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
        regexp: "^ssl ="
        line: "ssl = on"
      notify: Restart PostgreSQL

    - name: Configurer l'authentification PostgreSQL
      copy:
        content: |
          host    all             all             {{ backend_ip }}/32         md5
        dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
      notify: Restart PostgreSQL

    - name: S'assurer que UFW est installé
      apt:
        name: ufw
        state: present

    - name: Configurer UFW pour autoriser uniquement le trafic PostgreSQL depuis le back-end
      ufw:
        rule: allow
        port: "{{ postgresql_port }}"
        proto: tcp
        from_ip: "{{ backend_ip }}"

    - name: Activer UFW
      ufw:
        state: enabled

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted